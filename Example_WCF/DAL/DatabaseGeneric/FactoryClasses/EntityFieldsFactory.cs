///////////////////////////////////////////////////////////////
// This is generated code. 
//////////////////////////////////////////////////////////////
// Code is generated using LLBLGen Pro version: 3.5
// Code is generated on: woensdag 14 maart 2012 14:59:09
// Code is generated using templates: SD.TemplateBindings.SharedTemplates.NET20
// Templates vendor: Solutions Design.
// Templates version: 
//////////////////////////////////////////////////////////////
using System;
using SD.LLBLGen.Pro.Examples.WCF;
using SD.LLBLGen.Pro.Examples.WCF.HelperClasses;
using System.Collections.Generic;
using SD.LLBLGen.Pro.ORMSupportClasses;

namespace SD.LLBLGen.Pro.Examples.WCF.FactoryClasses
{
	/// <summary>Generates IEntityFields2 instances for different kind of Entities.</summary>
	public static partial class EntityFieldsFactory
	{
		private static readonly Dictionary<SD.LLBLGen.Pro.Examples.WCF.EntityType, string> _entityTypeNamesCache = new Dictionary<SD.LLBLGen.Pro.Examples.WCF.EntityType, string>();

		/// <summary>static ctor which initializes the static entity type cache.</summary>
		static EntityFieldsFactory()
		{
			foreach(SD.LLBLGen.Pro.Examples.WCF.EntityType value in Enum.GetValues(typeof(SD.LLBLGen.Pro.Examples.WCF.EntityType)))
			{
				_entityTypeNamesCache.Add(value, Enum.GetName(typeof(SD.LLBLGen.Pro.Examples.WCF.EntityType), value));
			}
		}	

		/// <summary>General factory entrance method which will return an EntityFields2 object with the format generated by the factory specified</summary>
		/// <param name="relatedEntityType">The type of entity the fields are for</param>
		/// <returns>The IEntityFields instance requested</returns>
		public static IEntityFields2 CreateEntityFieldsObject(SD.LLBLGen.Pro.Examples.WCF.EntityType relatedEntityType)
		{
			return FieldInfoProviderSingleton.GetInstance().GetEntityFields(InheritanceInfoProviderSingleton.GetInstance(), _entityTypeNamesCache[relatedEntityType]);
		}
		
		/// <summary>General method which will return an array of IEntityFieldCore objects, used by the InheritanceInfoProvider. Only the fields defined in the entity are returned, no inherited fields.</summary>
		/// <param name="entityName">the name of the entity to get the fields for. Example: "CustomerEntity"</param>
		/// <returns>array of IEntityFieldCore fields, defined in the entity with the name specified</returns>
		internal static IEntityFieldCore[] CreateFields(string entityName)
		{
			return FieldInfoProviderSingleton.GetInstance().GetEntityFieldsArray(entityName);
		}

		/// <summary>General factory entrance method which will return a TypedView EntityFields object with the format generated by the factory specified</summary>
		/// <param name="relatedTypedViewType">The type of typed view the fields are for</param>
		/// <returns>The IEntityFields2 instance requested</returns>
		public static IEntityFields2 CreateTypedViewEntityFieldsObject(TypedViewType relatedTypedViewType)
		{
			IEntityFields2 fieldsToReturn=null;
			switch(relatedTypedViewType)
			{
				case TypedViewType.InvoicesTypedView:
					fieldsToReturn = CreateInvoicesTypedViewEntityFields();
					break;
				case TypedViewType.ProductsByCategoryTypedView:
					fieldsToReturn = CreateProductsByCategoryTypedViewEntityFields();
					break;
				case TypedViewType.SalesByCategoryTypedView:
					fieldsToReturn = CreateSalesByCategoryTypedViewEntityFields();
					break;
			}
			return fieldsToReturn;
		}

		/// <summary>Creates a complete EntityFields instance for the InvoicesEntity.</summary>
		private static IEntityFields2 CreateInvoicesTypedViewEntityFields()
		{
			IEntityFields2 fieldsToReturn = new EntityFields2((int)InvoicesFieldIndex.AmountOfFields, null, FieldInfoProviderSingleton.GetInstance().GetFieldIndexes("InvoicesTypedView"));
			for(int i=0;i<(int)InvoicesFieldIndex.AmountOfFields;i++)
			{
				fieldsToReturn[i] = EntityFieldFactory.Create((InvoicesFieldIndex)i);
			}
			return fieldsToReturn;
		}

		/// <summary>Creates a complete EntityFields instance for the ProductsByCategoryEntity.</summary>
		private static IEntityFields2 CreateProductsByCategoryTypedViewEntityFields()
		{
			IEntityFields2 fieldsToReturn = new EntityFields2((int)ProductsByCategoryFieldIndex.AmountOfFields, null, FieldInfoProviderSingleton.GetInstance().GetFieldIndexes("ProductsByCategoryTypedView"));
			for(int i=0;i<(int)ProductsByCategoryFieldIndex.AmountOfFields;i++)
			{
				fieldsToReturn[i] = EntityFieldFactory.Create((ProductsByCategoryFieldIndex)i);
			}
			return fieldsToReturn;
		}

		/// <summary>Creates a complete EntityFields instance for the SalesByCategoryEntity.</summary>
		private static IEntityFields2 CreateSalesByCategoryTypedViewEntityFields()
		{
			IEntityFields2 fieldsToReturn = new EntityFields2((int)SalesByCategoryFieldIndex.AmountOfFields, null, FieldInfoProviderSingleton.GetInstance().GetFieldIndexes("SalesByCategoryTypedView"));
			for(int i=0;i<(int)SalesByCategoryFieldIndex.AmountOfFields;i++)
			{
				fieldsToReturn[i] = EntityFieldFactory.Create((SalesByCategoryFieldIndex)i);
			}
			return fieldsToReturn;
		}

		#region Included Code

		#endregion
	}
}
